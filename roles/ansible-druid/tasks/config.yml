---
# file: config.yml
#
# Druid configurations:

- name: Copy common.properties for all Druid nodes
  template:
    src: _common/common.runtime.properties.j2
    dest: "{{ druid_path }}conf/druid/cluster/_common/common.runtime.properties.j2"
    owner: "{{ druid_user }}"
    mode: 0644

# - name: Copy core-site.xml for all Druid nodes
#   template:
#     src: _common/core-site.xml.j2
#     dest: "{{ druid_path }}conf/druid/_common/core-site.xml"
#     owner: "{{ druid_user }}"
#     mode: 0644

- name: Remove _common log4j2.xml file
  file:
    state: absent
    path: "{{ druid_path }}conf/druid/_common/log4j2.xml"

- name: Copy log4j2.xml for Druid node broker
  template:
    src: _common/log4j2_broker.xml.j2
    dest: "{{ druid_path }}conf/druid/cluster/query/broker/log4j2.xml"
    owner: "{{ druid_user }}"
    mode: 0644
  when: broker is defined and broker

- name: Copy log4j2.xml for Druid node coordinator-overlord
  template:
    src: _common/log4j2_coordinator.xml.j2
    dest: "{{ druid_path }}conf/druid/cluster/master/coordinator-overlord/log4j2.xml"
    owner: "{{ druid_user }}"
    mode: 0644
  when: coordinator_overlord is defined and coordinator_overlord

- name: Copy log4j2.xml for Druid node historical
  template:
    src: _common/log4j2_historical.xml.j2
    dest: "{{ druid_path }}conf/druid/cluster/data/historical/log4j2.xml"
    owner: "{{ druid_user }}"
    mode: 0644
  when: historical is defined and historical

- name: Copy log4j2.xml for Druid node middleManager
  template:
    src: _common/log4j2_middleManager.xml.j2
    dest: "{{ druid_path }}conf/druid/cluster/data/middleManager/log4j2.xml"
    owner: "{{ druid_user }}"
    mode: 0644
  when: middleManager is defined and middleManager

# - name: Copy log4j2.xml for Druid node overlord
#   template:
#     src: _common/log4j2_overlord.xml.j2
#     dest: "{{ druid_path }}conf/druid/overlord/log4j2.xml"
#     owner: "{{ druid_user }}"
#     mode: 0644
#   when: overlord is defined and overlord
#
- name: Copy log4j2.xml for Druid node router
  template:
    src: _common/log4j2_router.xml.j2
    dest: "{{ druid_path }}conf/druid/cluster/query/router/log4j2.xml"
    owner: "{{ druid_user }}"
    mode: 0644
  when: router is defined and router

- block:
  - name: Make sure the graphite emitter conf directory exists
    file:
      path: "{{ druid_emitter_graphite_whitelist_dir }}"
      state: directory
      owner: "{{ druid_user }}"
      mode: 0644

  - name: Copy over the the graphite metric whitelist file
    template:
      src: "_common/emitter/graphite/whitelist.json.j2"
      dest: "{{ druid_emitter_graphite_whitelist_dir }}/whitelist.json"
      owner: "{{ druid_user }}"
      mode: 0644
  when: druid_emitter == "graphite" and druid_emitter_graphite_whitelist != ""

# - name: Copy over specific configuration for Druid node broker
#   template:
#     src: "broker/runtime.properties.j2"
#     dest: "{{ druid_path }}conf/druid/cluster/query/broker/"
#     owner: "{{ druid_user }}"
#     mode: 0644
#   when: broker is defined and broker

- name: Copy over specific configuration for Druid node coordinator-overlord
  template:
    src: "coordinator-overlord/runtime.properties.j2"
    dest: "{{ druid_path }}conf/druid/cluster/master/coordinator-overlord/runtime.properties"
    owner: "{{ druid_user }}"
    mode: 0644
  when: coordinator_overlord is defined and coordinator_overlord

- name: Copy over jvm configuration for Druid node coordinator-overlord
  template:
    src: "coordinator-overlord/jvm.config.j2"
    dest: "{{ druid_path }}conf/druid/cluster/master/coordinator-overlord/jvm.config"
    owner: "{{ druid_user }}"
    mode: 0744
  when: coordinator_overlord is defined and coordinator_overlord

- name: Copy over main configuration for Druid node coordinator-overlord
  template:
    src: "coordinator-overlord/main.config.j2"
    dest: "{{ druid_path }}conf/druid/cluster/data/master/coordinator-overlord/main.config"
    owner: "{{ druid_user }}"
    mode: 0644
  when: coordinator_overlord is defined and coordinator_overlord

- name: Copy over jvm configuration for Druid node historical
  template:
    src: "historical/jvm.config.j2"
    dest: "{{ druid_path }}conf/druid/cluster/data/historical/jvm.config"
    owner: "{{ druid_user }}"
    mode: 0644
  when: historical is defined and historical

- name: Copy over main configuration for Druid node historical
  template:
    src: "historical/main.config.j2"
    dest: "{{ druid_path }}conf/druid/cluster/data/historical/main.config"
    owner: "{{ druid_user }}"
    mode: 0644
  when: historical is defined and historical

- name: Copy over specific configuration for Druid node historical
  template:
    src: "historical/runtime.properties.j2"
    dest: "{{ druid_path }}conf/druid/cluster/data/historical/runtime.properties"
    owner: "{{ druid_user }}"
    mode: 0644
  when: historical is defined and historical

- name: Copy over jvm configuration for Druid node middleManager
  template:
    src: "middleManager/jvm.config.j2"
    dest: "{{ druid_path }}conf/druid/cluster/data/middleManager/jvm.config"
    owner: "{{ druid_user }}"
    mode: 0644
  when: middleManager is defined and middleManager

- name: Copy over main configuration for Druid node middleManager
  template:
    src: "middleManager/main.config.j2"
    dest: "{{ druid_path }}conf/druid/cluster/data/middleManager/main.config"
    owner: "{{ druid_user }}"
    mode: 0644
  when: middleManager is defined and middleManager

- name: Copy over specific configuration for Druid node middleManager
  template:
    src: "middleManager/runtime.properties.j2"
    dest: "{{ druid_path }}conf/druid/cluster/data/middleManager/runtime.properties"
    owner: "{{ druid_user }}"
    mode: 0644
  when: middleManager is defined and middleManager

- name: Copy over jvm configuration for Druid node indexer
  template:
    src: "indexer/jvm.config.j2"
    dest: "{{ druid_path }}conf/druid/indexer/jvm.config"
    owner: "{{ druid_user }}"
    mode: 0644
  when: historical is defined and historical

- name: Copy over main configuration for Druid node indexer
  template:
    src: "indexer/main.config.j2"
    dest: "{{ druid_path }}conf/druid/cluster/data/indexer/main.config"
    owner: "{{ druid_user }}"
    mode: 0644
  when: historical is defined and historical

- name: Copy over specific configuration for Druid node indexer
  template:
    src: "indexer/runtime.properties.j2"
    dest: "{{ druid_path }}conf/druid/cluster/data/indexer/runtime.properties"
    owner: "{{ druid_user }}"
    mode: 0644
  when: historical is defined and historical

- name: Copy over jvm configuration for Druid node broker
  template:
    src: "broker/jvm.config.j2"
    dest: "{{ druid_path }}conf/druid/cluster/query/broker/jvm.config"
    owner: "{{ druid_user }}"
    mode: 0644
  when: broker is defined and broker

- name: Copy over main configuration for Druid node broker
  template:
    src: "broker/main.config.j2"
    dest: "{{ druid_path }}conf/druid/cluster/query/broker/main.config"
    owner: "{{ druid_user }}"
    mode: 0644
  when: broker is defined and broker

- name: Copy over specific configuration for Druid node broker
  template:
    src: "broker/runtime.properties.j2"
    dest: "{{ druid_path }}conf/druid/cluster/query/broker/runtime.properties"
    owner: "{{ druid_user }}"
    mode: 0644
  when: broker is defined and broker

- name: Copy over jvm configuration for Druid node router
  template:
    src: "router/jvm.config.j2"
    dest: "{{ druid_path }}conf/druid/cluster/query/router/jvm.config"
    owner: "{{ druid_user }}"
    mode: 0644
  when: router is defined and router

- name: Copy over main configuration for Druid node router
  template:
    src: "router/main.config.j2"
    dest: "{{ druid_path }}conf/druid/cluster/query/router/main.config"
    owner: "{{ druid_user }}"
    mode: 0644
  when: router is defined and router

- name: Copy over specific configuration for Druid node router
  template:
    src: "router/runtime.properties.j2"
    dest: "{{ druid_path }}conf/druid/cluster/query/router/runtime.properties"
    owner: "{{ druid_user }}"
    mode: 0644
  when: router is defined and router

- name: Copy over systemd service file for druid role broker
  template:
    src: druid.service_broker.j2
    dest: /lib/systemd/system/druid-broker.service
    owner: root
    mode: 0644
  when: broker is defined and broker

- name: Copy over systemd service file for druid role coordinator-overlord
  template:
    src: druid.service_coordinator.j2
    dest: /lib/systemd/system/druid-coordinator.service
    owner: root
    mode: 0644
  when: coordinator_overlord is defined and coordinator_overlord

- name: Copy over systemd service file for druid role historical
  template:
    src: druid.service_historical.j2
    dest: /lib/systemd/system/druid-historical.service
    owner: root
    mode: 0644
  when: historical is defined and historical

- name: Copy over systemd service file for druid role middleManager
  template:
    src: druid.service_middleManager.j2
    dest: /lib/systemd/system/druid-middleManager.service
    owner: root
    mode: 0644
  when: middleManager is defined and middleManager

- name: Copy over systemd service file for druid role router
  template:
    src: druid.service_router.j2
    dest: /lib/systemd/system/druid-router.service
    owner: root
    mode: 0644
  when: router is defined and router

- name: Start druid broker systemd service
  systemd:
    name: druid-broker
    state: restarted
    daemon_reload: yes
    enabled: yes
  when: broker is defined and broker

- name: Start druid coordinator-overlord systemd service
  systemd:
    name: druid-coordinator
    state: restarted
    daemon_reload: yes
    enabled: yes
  when: coordinator_overlord is defined and coordinator_overlord

- name: Start druid historical systemd service
  systemd:
    name: druid-historical
    state: restarted
    daemon_reload: yes
    enabled: yes
  when: historical is defined and historical

# - name: Start druid middleManager systemd service
#   systemd:
#     name: druid-middleManager
#     state: restarted
#     daemon_reload: yes
#     enabled: yes
#   when: middleManager is defined and middleManager
