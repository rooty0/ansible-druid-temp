druid.service=druid/middleManager
druid.host={{ ansible_ec2_public_ipv4|default(ansible_default_ipv4.address) }}
druid.port=8091

# Storage for task logs
druid.indexer.logs.type={{ druid_indexer_logs_type }}
druid.indexer.logs.s3Bucket={{ druid_indexer_logs_s3Bucket }}
druid.indexer.logs.s3Prefix={{ druid_indexer_logs_s3Prefix }}

# Task launch parameters
druid.indexer.runner.javaOptsArray={{ druid_mm_java_opts_array }}
druid.indexer.task.baseTaskDir=/mnt/druid/task

# Peon properties
druid.indexer.fork.property.druid.processing.buffer.sizeBytes=250000000
druid.indexer.fork.property.druid.processing.numThreads=2
druid.indexer.fork.property.druid.segmentCache.locations=[{"path": "/mnt/druid/segment_cache", "maxSize": 0}]
druid.indexer.fork.property.druid.server.http.numThreads=10
{% if druid_middlemanager_indexer_storage_settings is defined %}
{% for (key, value) in druid_middlemanager_indexer_storage_settings %}
druid.indexer.fork.property.druid.storage.{{ key }}={{ value}}
{% endfor %}
{% endif %}
{% if druid_middlemanager_monitoring_monitors %}
# Logging monitors
druid.indexer.fork.property.druid.monitoring.monitors=[{% for monitor in druid_middlemanager_monitoring_monitors %}"{{ monitor }}"{% if loop.index != loop.length %}, {% endif %}{% endfor %}]
{% endif %}

# Number of tasks per middleManager
druid.worker.capacity={{ druid_mm_worker_capacity }}
druid.worker.version={{ druid_indexer_worker_version }}

# Hadoop indexing
druid.indexer.task.hadoopWorkingPath=/mnt/druid/hadoop-tmp
druid.indexer.task.defaultHadoopCoordinates=["org.apache.hadoop:hadoop-client:2.7.3"]
